# Turn on the mouse
set -g mouse on

set -g default-shell "/bin/fish"

set -g detach-on-destroy off

set-option -sa terminal-features ',xterm-kitty:RGB'
# set-option -sa terminal-features ',xterm-256color:RGB'

# automatically renumber tmux windows
set -g renumber-windows on

# unbind default prefix and set it to Ctrl+a
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# for nested tmux sessions
bind-key a send-prefix

# Activity Monitoring
set -g monitor-activity off
set -g visual-activity off

# tile all windows
unbind =
bind = select-layout tiled

# make window/pane index start with 1
set -g base-index 1
set -g pane-base-index 1

set-option -g status-position bottom

# Rename Pane with Tail of working directory
set-option -g automatic-rename on
set-option -g automatic-rename-format '#(basename "#{pane_current_path}")'
set-option -g status-interval 1

######################
#### Key Bindings ####
######################
# New Window ( tab whatever )
bind -n M-t new-window

# split window and fix path for tmux 1.9
# bind v split-window -h -c "#{pane_current_path}" -p 25
# bind s split-window -v -c "#{pane_current_path}" -p 25

unbind '"'
unbind %

bind % split-window -h -c "#{pane_current_path}"
bind '"' split-window -v -c "#{pane_current_path}"

# Some Extra Keybinds
unbind t
bind t run-shell ~/.tmux/plugins/t-smart-tmux-session-manager/bin/t

# Split Window Apps
# bind C-g split-window -h -c "#{pane_current_path}" lazygit
bind C-g new-window -c "#{pane_current_path}" lazygit
bind C-t split-window -h -c "#{pane_current_path}" "php artisan tinker"
bind C-f split-window -h -c "#{pane_current_path}" ranger
bind C-e new-window -c "#{pane_current_path}" -n "Ranger" ranger

bind -n M-p run-shell ~/.tmux/plugins/t-smart-tmux-session-manager/bin/t
bind -n M-w run-shell ~/.local/bin/tmux-fzf-window
bind s run-shell ~/.local/bin/tmux-fzf-ssh

# Last Window and Last Session
unbind "'"
bind "'" last-window
unbind ";"
bind ";" switch-client -l

# Toggle status bar
bind S set status

# Smart Split Nvim Navigation
# Smart pane switching with awareness of Vim splits.
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" 'send-keys C-h'  'select-pane -L'
bind-key -n C-j if-shell "$is_vim" 'send-keys C-j'  'select-pane -D'
bind-key -n C-k if-shell "$is_vim" 'send-keys C-k'  'select-pane -U'
bind-key -n C-l if-shell "$is_vim" 'send-keys C-l'  'select-pane -R'

bind-key -n M-h if-shell "$is_vim" 'send-keys M-h' 'resize-pane -L 3'
bind-key -n M-j if-shell "$is_vim" 'send-keys M-j' 'resize-pane -D 3'
bind-key -n M-k if-shell "$is_vim" 'send-keys M-k' 'resize-pane -U 3'
bind-key -n M-l if-shell "$is_vim" 'send-keys M-l' 'resize-pane -R 3'

tmux_version='$(tmux -V | sed -En "s/^tmux ([0-9]+(.[0-9]+)?).*/\1/p")'
if-shell -b '[ "$(echo "$tmux_version < 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\'  'select-pane -l'"
if-shell -b '[ "$(echo "$tmux_version >= 3.0" | bc)" = 1 ]' \
    "bind-key -n 'C-\\' if-shell \"$is_vim\" 'send-keys C-\\\\'  'select-pane -l'"

bind-key -T copy-mode-vi 'C-h' select-pane -L
bind-key -T copy-mode-vi 'C-j' select-pane -D
bind-key -T copy-mode-vi 'C-k' select-pane -U
bind-key -T copy-mode-vi 'C-l' select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Pane Nav
bind-key -r h select-pane -L
bind-key -r j select-pane -D
bind-key -r k select-pane -U
bind-key -r l select-pane -R

# Resize pane shortcuts
bind -r H resize-pane -L 10
bind -r J resize-pane -D 10
bind -r K resize-pane -U 10
bind -r L resize-pane -R 10

# set vi mode for copy mode
set -g mode-keys vi
bind-key -T copy-mode-vi 'v' send -X begin-selection
bind-key -T copy-mode-vi 'C-v' send -X begin-selection \; send -X rectangle-toggle

bind-key -T copy-mode-vi C-\\ select-pane -l
bind-key -n "C-\\" if-shell "$is_vim" "send-keys C-\\\\"  "select-pane -l"

# Tmux Fzf
TMUX_FZF_LAUNCH_KEY="f"

# Tmux Plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'jabirali/tmux-tilish'
set -g @plugin 'joshmedeski/t-smart-tmux-session-manager'
set -g @plugin 'sainnhe/tmux-fzf'

# Catppuccin
set -g @plugin 'catppuccin/tmux'
set -g @catppuccin_flavour 'mocha' # latte, frappe, macchiato, mocha
set -g @catppuccin_status_modules "session host"
set -g @catppuccin_window_tabs_enabled off # or off to disable window_tabs
# set -g @catppuccin_window_left_separator "█"
set -g @catppuccin_window_left_separator ""
# set -g @catppuccin_window_right_separator "█ "
set -g @catppuccin_window_number_position "left"
# set -g @catppuccin_window_middle_separator "  █"
set -g @catppuccin_window_middle_separator ""
set -g @catppuccin_window_default_fill "number"
set -g @catppuccin_window_current_fill "number"
set -g @catppuccin_window_default_text "#W"
set -g @catppuccin_window_current_text "#W"
set -g @catppuccin_status_left_separator  ""
set -g @catppuccin_status_right_separator " "
set -g @catppuccin_status_right_separator_inverse "yes"
set -g @catppuccin_status_fill "all"
set -g @catppuccin_status_connect_separator "no"

set -g @tilish-dmenu 'on'
set -g @tilish-navigate 'on'
set -g @tilish-easymode 'on'
set -g @tilish-default 'main-horizontal'

set -g @resurrect-strategy-nvim 'session'
set -g @resurrect-capture-pane-contents 'on'
set -g @continuum-boot 'off'
set -g @continuum-restore 'off'

# Tmux SSH
set-option -g @ssh-split-keep-cwd "true"
set-option -g @ssh-split-keep-remote-cwd "true"
set-option -g @ssh-split-fail "false"
set-option -g @ssh-split-no-env "false"
set-option -g @ssh-split-no-shell "false"
set-option -g @ssh-split-strip-cmd "true"
set-option -g @ssh-split-verbose "true"
set-option -g @ssh-split-debug "false"
set-option -g @ssh-split-h-key "|"
set-option -g @ssh-split-v-key "V"
set-option -g @ssh-split-w-key "C"

set -g @plugin 'pschmitt/tmux-ssh-split'

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"

run '~/.tmux/plugins/tpm/tpm'
